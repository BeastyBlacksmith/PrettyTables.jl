function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    Base.precompile(Tuple{Core.kwftype(typeof(pretty_table)),NamedTuple{(:alignment, :crop), Tuple{Symbol, Symbol}},typeof(pretty_table),Vector{Any}})   # time: 0.055181026
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Float16}})   # time: 0.053405367
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int8}})   # time: 0.04658952
    Base.precompile(Tuple{typeof(_apply_alignment_anchor_regex!),Matrix{Vector{String}},Vector{Symbol},UnitRange{Int64},UnitRange{Int64},Int64,Symbol,Dict{Int64, Symbol},Dict{Int64, Vector{Regex}},Dict{Tuple{Int64, Int64}, Symbol}})   # time: 0.04475043
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt8}})   # time: 0.044251688
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Bool}})   # time: 0.042782694
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int16}})   # time: 0.042388875
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int32}})   # time: 0.038947675
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),AnsiTextCell})   # time: 0.038309664
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt16}})   # time: 0.033464838
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt16}})   # time: 0.032761704
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Float64}})   # time: 0.03226659
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Char}})   # time: 0.03212763
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int32}})   # time: 0.03105159
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int32})   # time: 0.030756926
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Float32}})   # time: 0.029855577
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt64}})   # time: 0.029078301
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int8}})   # time: 0.028523952
    Base.precompile(Tuple{typeof(_apply_alignment_anchor_regex!),Matrix{Vector{String}},Vector{Symbol},UnitRange{Int64},Vector{Int64},Int64,Symbol,Dict{Int64, Symbol},Dict{Int64, Vector{Regex}},Dict{Tuple{Int64, Int64}, Symbol}})   # time: 0.028340422
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt32}})   # time: 0.026946152
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Tuple{Int64, Int64}})   # time: 0.024414206
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Bool}})   # time: 0.024105523
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int64}})   # time: 0.021951457
    Base.precompile(Tuple{typeof(_fill_matrix_data!),Matrix{String},Matrix{Vector{String}},UnitRange{Int64},Vector{Int64},Vector{Int64},Int64,Any,Any,Ref{Any},Display,Bool,Bool,Vector{Int64},Bool,Bool,Bool,Bool,Bool,Val{:print},Symbol})   # time: 0.018825624
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt32}})   # time: 0.017154256
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Float16}})   # time: 0.017023785
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{String}})   # time: 0.017016225
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt8}})   # time: 0.01694256
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int16})   # time: 0.01668201
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Float64})   # time: 0.016403377
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Char})   # time: 0.016258327
    Base.precompile(Tuple{typeof(_create_printing_recipe),Display,Int64,Int64,Int64,Int64,Int64,Vector{Int64},Vector{Int64},UnitRange{Int64},Vector{Int64},Vector{Int64},Int64,Int64,Symbol,Bool,Bool,Symbol})   # time: 0.01625119
    Base.precompile(Tuple{typeof(_create_printing_recipe),Display,Int64,Int64,Int64,Int64,Int64,Vector{Int64},Vector{Int64},Vector{Int64},Vector{Int64},Vector{Int64},Int64,Int64,Symbol,Bool,Bool,Symbol})   # time: 0.016201507
    Base.precompile(Tuple{typeof(_apply_alignment_anchor_regex!),Matrix{Vector{String}},Vector{Symbol},Vector{Int64},Vector{Int64},Int64,Symbol,Dict{Int64, Symbol},Dict{Int64, Vector{Regex}},Dict{Tuple{Int64, Int64}, Symbol}})   # time: 0.016184025
    Base.precompile(Tuple{typeof(_compute_cell_alignment_override),Matrix{Any},Vector{Int64},Vector{Int64},Int64,Int64,Int64,Base.RefValue{Any}})   # time: 0.015979208
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Float32}})   # time: 0.015576495
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Char}})   # time: 0.015378058
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{String}})   # time: 0.015313366
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt64}})   # time: 0.015051857
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int16}})   # time: 0.014971468
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Float64}})   # time: 0.014802472
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int64})   # time: 0.014222247
    Base.precompile(Tuple{typeof(_apply_alignment_anchor_regex!),Matrix{Vector{String}},Vector{Symbol},Vector{Int64},UnitRange{Int64},Int64,Symbol,Dict{Int64, Symbol},Dict{Int64, Vector{Regex}},Dict{Tuple{Int64, Int64}, Symbol}})   # time: 0.014168878
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int64}})   # time: 0.013549509
    Base.precompile(Tuple{typeof(_fill_matrix_data!),Matrix{String},Matrix{Vector{String}},Vector{Int64},Vector{Int64},Vector{Int64},Int64,Any,Any,Ref{Any},Display,Bool,Bool,Vector{Int64},Bool,Bool,Bool,Bool,Bool,Val{:print},Symbol})   # time: 0.013282484
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt32})   # time: 0.012771182
    Base.precompile(Tuple{typeof(_print_table_data),IOContext{IOBuffer},Display,Any,Matrix{Vector{String}},UnitRange{Int64},UnitRange{Int64},Int64,Vector{Int64},Vector{Int64},Vector{NTuple{4, Int64}},Vector{Int64},Vector{Symbol},NTuple{4, Char},Dict{Tuple{Int64, Int64}, Symbol},Symbol,Int64,Ref{Any},Bool,Bool,Bool,TextFormat,Crayon,Crayon,Crayon})   # time: 0.01198856
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt64})   # time: 0.011380769
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Float32})   # time: 0.011319559
    Base.precompile(Tuple{typeof(_fill_row_number_column!),Matrix{String},Matrix{Vector{String}},UnitRange{Int64},Vector{Int64},Vector{Int64},Bool,Int64,String})   # time: 0.011266663
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Bool})   # time: 0.011249121
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt16})   # time: 0.011237275
    Base.precompile(Tuple{typeof(_print_table_header!),IOContext{IOBuffer},Display,Any,Matrix{String},Vector{Int64},Vector{Int64},Int64,Int64,Vector{Int64},Vector{Int64},Vector{Symbol},Vector{Symbol},Ref{Any},Bool,Bool,TextFormat,Crayon,Vector{Crayon},Vector{Crayon},Crayon,Crayon})   # time: 0.011220947
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Float16})   # time: 0.010918392
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt8})   # time: 0.01077456
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),String})   # time: 0.010652872
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int8})   # time: 0.010635556
    Base.precompile(Tuple{typeof(_print_table_header!),IOContext{IOBuffer},Display,Any,Matrix{String},Vector{Int64},UnitRange{Int64},Int64,Int64,Vector{Int64},Vector{Int64},Vector{Symbol},Vector{Symbol},Ref{Any},Bool,Bool,TextFormat,Crayon,Vector{Crayon},Vector{Crayon},Crayon,Crayon})   # time: 0.009702097
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Symbol})   # time: 0.009521228
    Base.precompile(Tuple{typeof(_print_table_header!),IOContext{IOBuffer},Display,Any,Matrix{String},UnitRange{Int64},Vector{Int64},Int64,Int64,Vector{Int64},Vector{Int64},Vector{Symbol},Vector{Symbol},Ref{Any},Bool,Bool,TextFormat,Crayon,Vector{Crayon},Vector{Crayon},Crayon,Crayon})   # time: 0.009474915
    Base.precompile(Tuple{typeof(_print_table_header!),IOContext{IOBuffer},Display,Any,Matrix{String},UnitRange{Int64},UnitRange{Int64},Int64,Int64,Vector{Int64},Vector{Int64},Vector{Symbol},Vector{Symbol},Ref{Any},Bool,Bool,TextFormat,Crayon,Vector{Crayon},Vector{Crayon},Crayon,Crayon})   # time: 0.008998098
    Base.precompile(Tuple{typeof(_print_table_data),IOContext{IOBuffer},Display,Any,Matrix{Vector{String}},Vector{Int64},Vector{Int64},Int64,Vector{Int64},Vector{Int64},Vector{NTuple{4, Int64}},Vector{Int64},Vector{Symbol},NTuple{4, Char},Dict{Tuple{Int64, Int64}, Symbol},Symbol,Int64,Ref{Any},Bool,Bool,Bool,TextFormat,Crayon,Crayon,Crayon})   # time: 0.008959791
    Base.precompile(Tuple{typeof(_print_table_data),IOContext{IOBuffer},Display,Any,Matrix{Vector{String}},UnitRange{Int64},Vector{Int64},Int64,Vector{Int64},Vector{Int64},Vector{NTuple{4, Int64}},Vector{Int64},Vector{Symbol},NTuple{4, Char},Dict{Tuple{Int64, Int64}, Symbol},Symbol,Int64,Ref{Any},Bool,Bool,Bool,TextFormat,Crayon,Crayon,Crayon})   # time: 0.008848353
    Base.precompile(Tuple{typeof(_print_table_data),IOContext{IOBuffer},Display,Any,Matrix{Vector{String}},Vector{Int64},UnitRange{Int64},Int64,Vector{Int64},Vector{Int64},Vector{NTuple{4, Int64}},Vector{Int64},Vector{Symbol},NTuple{4, Char},Dict{Tuple{Int64, Int64}, Symbol},Symbol,Int64,Ref{Any},Bool,Bool,Bool,TextFormat,Crayon,Crayon,Crayon})   # time: 0.007775474
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_first_line_only, :column_width, :compact_printing, :linebreaks, :renderer), Tuple{Bool, Bool, Int64, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),String})   # time: 0.006297878
    Base.precompile(Tuple{typeof(_compute_table_size_data),Matrix{String},Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Bool,Vector{Int64},Vector{Int64},Bool})   # time: 0.00597332
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Symbol})   # time: 0.005168831
    Base.precompile(Tuple{typeof(_compute_table_size_data),Matrix{String},Matrix{Vector{String}},UnitRange{Int64},Int64,Vector{Int64},Bool,Vector{Int64},Vector{Int64},Bool})   # time: 0.005029891
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),URLTextCell})   # time: 0.004771151
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),String})   # time: 0.004595103
    Base.precompile(Tuple{typeof(_compute_cell_alignment_override),Vector{AnsiTextCell},UnitRange{Int64},UnitRange{Int64},Int64,Int64,Int64,Base.RefValue{Any}})   # time: 0.004345951
    Base.precompile(Tuple{typeof(_compute_row_fill_vectors),UnitRange{Int64},Int64,Symbol})   # time: 0.003964879
    Base.precompile(Tuple{typeof(_compute_cell_alignment_override),Matrix{Any},UnitRange{Int64},Vector{Int64},Int64,Int64,Int64,Base.RefValue{Any}})   # time: 0.003780524
    Base.precompile(Tuple{typeof(_compute_cell_alignment_override),Matrix{Any},UnitRange{Int64},UnitRange{Int64},Int64,Int64,Int64,Base.RefValue{Any}})   # time: 0.003333915
    Base.precompile(Tuple{typeof(_compute_row_fill_vectors),Vector{Int64},Int64,Symbol})   # time: 0.003123489
    Base.precompile(Tuple{typeof(_compute_cell_alignment_override),Matrix{Any},Vector{Int64},UnitRange{Int64},Int64,Int64,Int64,Base.RefValue{Any}})   # time: 0.002937783
    Base.precompile(Tuple{typeof(_compute_cell_alignment_override),ColumnTable,UnitRange{Int64},UnitRange{Int64},Int64,Int64,Int64,Base.RefValue{Any}})   # time: 0.002871913
    Base.precompile(Tuple{typeof(_compute_cell_alignment_override),Vector{Any},UnitRange{Int64},UnitRange{Int64},Int64,Int64,Int64,Base.RefValue{Any}})   # time: 0.002792988
    Base.precompile(Tuple{typeof(getindex),ColumnTable,Int64,Int64})   # time: 0.0011744
end
