function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    Base.precompile(Tuple{Core.kwftype(typeof(pretty_table)),NamedTuple{(:alignment, :crop), Tuple{Symbol, Symbol}},typeof(pretty_table),Vector{Any}})   # time: 0.08221803
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int8}})   # time: 0.06731408
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:header_crayon,), Tuple{Vector{Crayon}}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.056737594
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt32}})   # time: 0.043559786
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt64}})   # time: 0.036902588
    Base.precompile(Tuple{typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.036869764
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),AnsiTextCell})   # time: 0.036139622
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Float16}})   # time: 0.031510655
    Base.precompile(Tuple{typeof(_print_table_data!),Display,ProcessedTable,Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Int64,Vector{Int64},NTuple{4, Char},Symbol,Int64,Ref{Any},Vector{Int64},TextFormat,TextCrayons{Vector{Crayon}, Vector{Crayon}},Symbol})   # time: 0.031224988
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:subheader_crayon,), Tuple{Vector{Crayon}}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.030868141
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int32}})   # time: 0.030710911
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Float64}})   # time: 0.029963264
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt8}})   # time: 0.029785238
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:crop, :crop_num_lines_at_beginning, :display_size, :ellipsis_line_skip, :hlines, :newline_at_end, :row_name_crayon, :vcrop_mode, :vlines), Tuple{Symbol, Int64, Tuple{Int64, Int64}, Int64, Vector{Symbol}, Bool, Crayon, Symbol, Vector{Int64}}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.029647868
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int16}})   # time: 0.029255878
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt16}})   # time: 0.029195227
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Bool}})   # time: 0.028109847
    Base.precompile(Tuple{typeof(_print_table_data!),Display,ProcessedTable,Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Int64,Vector{Int64},NTuple{4, Char},Symbol,Int64,Ref{Any},Vector{Int64},TextFormat,TextCrayons{Crayon, Crayon},Symbol})   # time: 0.02719614
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt16})   # time: 0.027125878
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:header_crayon, :subheader_crayon), Tuple{Vector{Crayon}, Vector{Crayon}}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.025680872
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt64}})   # time: 0.025517939
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int8}})   # time: 0.025457123
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Float32}})   # time: 0.025033068
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int64}})   # time: 0.022313366
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:sortkeys,), Tuple{Bool}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.021724697
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Float64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.02135603
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Float64}})   # time: 0.019638997
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Tuple{Int64, Int64}})   # time: 0.018979283
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Char}})   # time: 0.018302878
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int64})   # time: 0.018118639
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:crop,), Tuple{Symbol}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.017744765
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{String}})   # time: 0.0175483
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{String}})   # time: 0.01654904
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),String})   # time: 0.016138101
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Char}})   # time: 0.016019737
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Symbol})   # time: 0.015703214
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt32}})   # time: 0.015259895
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int32}})   # time: 0.015244981
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int16}})   # time: 0.015222641
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Bool}})   # time: 0.015194724
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt8}})   # time: 0.015139502
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Float16}})   # time: 0.015018981
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Float32}})   # time: 0.014720026
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt16}})   # time: 0.014667811
    Base.precompile(Tuple{typeof(_print_table_data!),Display,ProcessedTable,Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Int64,Vector{Int64},NTuple{4, Char},Symbol,Int64,Ref{Any},Vector{Int64},TextFormat,TextCrayons{Crayon, Vector{Crayon}},Symbol})   # time: 0.014438837
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int64}})   # time: 0.013898436
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt32})   # time: 0.01276402
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int16})   # time: 0.012673612
    Base.precompile(Tuple{typeof(_print_table_data!),Display,ProcessedTable,Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Int64,Vector{Int64},NTuple{4, Char},Symbol,Int64,Ref{Any},Vector{Int64},TextFormat,TextCrayons{Vector{Crayon}, Crayon},Symbol})   # time: 0.012659168
    Base.precompile(Tuple{typeof(_print_table_data!),Display,ProcessedTable,Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Int64,Vector{Int64},NTuple{4, Char},Symbol,Int64,Ref{Any},Vector{Int64},TextFormat,TextCrayons{Crayon, Crayon},Vector{Int64}})   # time: 0.012605638
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Float16})   # time: 0.012008066
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int32})   # time: 0.011763474
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Bool})   # time: 0.011216652
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Float64})   # time: 0.010996265
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt8})   # time: 0.010838824
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Float32})   # time: 0.010680234
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int8})   # time: 0.010078782
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt64})   # time: 0.009979182
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Char})   # time: 0.00959045
    Base.precompile(Tuple{typeof(compact_type_str),DataType})   # time: 0.008212794
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,AnsiTextCell,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.007854768
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,URLTextCell,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.007680534
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Tuple{Int64, Int64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.006591541
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),String})   # time: 0.006110306
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{String},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.006052003
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{UInt64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005976043
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Float16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005506712
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Char},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005466886
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Float16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005418598
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Int8,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.0053288
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Bool},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005285757
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{UInt32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005206852
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Bool},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005151048
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Int8},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004942268
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Symbol})   # time: 0.004931653
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Float64,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.00470963
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Bool,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004704842
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,String,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004680102
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,UInt8,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004527397
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Int64,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004499131
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Float16,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004495942
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Float32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004456572
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{UInt16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004400736
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{UInt64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004368538
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,UInt64,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004362701
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{UInt32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004282471
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{UInt8},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004281463
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Int16,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.00427569
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Float32,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004210704
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Int32,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004208598
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Char},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004168238
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Float64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004147634
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Int16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004082491
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Symbol,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004058504
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{String},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004050953
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,UInt16,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004038293
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Int64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004025652
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Char,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.00401937
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{UInt8},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003975296
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Float32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003962805
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,UInt32,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003944583
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{UInt16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003925626
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Int8},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003923761
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Int32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003918899
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Int16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003917127
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Int32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003915791
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Int64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003915507
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),URLTextCell})   # time: 0.0033029
    Base.precompile(Tuple{typeof(_print_custom_text_cell!),Display,URLTextCell,String,Crayon,Int64,Ref{Any}})   # time: 0.001581245
    Base.precompile(Tuple{typeof(_print_custom_text_cell!),Display,AnsiTextCell,String,Crayon,Int64,Ref{Any}})   # time: 0.001544569
end
