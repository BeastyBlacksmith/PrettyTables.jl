function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int8}})   # time: 0.065756
    Base.precompile(Tuple{Core.kwftype(typeof(pretty_table)),NamedTuple{(:alignment, :crop), Tuple{Symbol, Symbol}},typeof(pretty_table),Vector{Any}})   # time: 0.065215856
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,UInt8,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.052226115
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt16}})   # time: 0.05036457
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:subheader_crayon,), Tuple{Vector{Crayon}}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.047631405
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int16}})   # time: 0.046165705
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),AnsiTextCell})   # time: 0.0435418
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Float32}})   # time: 0.042696785
    Base.precompile(Tuple{typeof(_pt_latex),IOContext{Base.TTY},PrintInfo})   # time: 0.039252765
    Base.precompile(Tuple{typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.035749614
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:crop, :crop_num_lines_at_beginning, :display_size, :ellipsis_line_skip, :hlines, :newline_at_end, :row_name_crayon, :vcrop_mode, :vlines), Tuple{Symbol, Int64, Tuple{Int64, Int64}, Int64, Vector{Symbol}, Bool, Crayon, Symbol, Vector{Int64}}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.035023242
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Char}})   # time: 0.033619747
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:header_crayon, :subheader_crayon), Tuple{Vector{Crayon}, Vector{Crayon}}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.03291468
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:header_crayon,), Tuple{Vector{Crayon}}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.032519933
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt64}})   # time: 0.03250335
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_latex)),NamedTuple{(:compact_printing, :limit_printing, :renderer), Tuple{Bool, Bool, Val{:print}}},typeof(_parse_cell_latex),String})   # time: 0.032477815
    Base.precompile(Tuple{typeof(_print_table_data!),Display,ProcessedTable,Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Int64,Vector{Int64},NTuple{4, Char},Symbol,Int64,Ref{Any},Vector{Int64},TextFormat,TextCrayons{Crayon, Crayon},Symbol})   # time: 0.031197129
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int32}})   # time: 0.030376352
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int8}})   # time: 0.029742997
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int32})   # time: 0.029690964
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt32}})   # time: 0.028605094
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Float16}})   # time: 0.027595203
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Bool}})   # time: 0.026232913
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Float64}})   # time: 0.02446073
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{UInt8}})   # time: 0.023881856
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_latex)),NamedTuple{(:cell_first_line_only, :compact_printing, :limit_printing, :renderer), Tuple{Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_latex),LatexCell{String}})   # time: 0.022677526
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Int64}})   # time: 0.022500345
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),String})   # time: 0.021929955
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt64}})   # time: 0.020017596
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int64})   # time: 0.019783717
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Tuple{Int64, Int64}})   # time: 0.019642392
    Base.precompile(Tuple{typeof(_print_table_data!),Display,ProcessedTable,Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Int64,Vector{Int64},NTuple{4, Char},Symbol,Int64,Ref{Any},Vector{Int64},TextFormat,TextCrayons{Crayon, Crayon},Vector{Int64}})   # time: 0.019502511
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int16}})   # time: 0.018286886
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:sortkeys,), Tuple{Bool}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.01801497
    Base.precompile(Tuple{Core.kwftype(typeof(_pt_text)),NamedTuple{(:crop,), Tuple{Symbol}},typeof(_pt_text),IOContext{Base.TTY},PrintInfo})   # time: 0.017289069
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{String}})   # time: 0.016465874
    Base.precompile(Tuple{typeof(_print_table_data!),Display,ProcessedTable,Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Int64,Vector{Int64},NTuple{4, Char},Symbol,Int64,Ref{Any},Vector{Int64},TextFormat,TextCrayons{Vector{Crayon}, Crayon},Symbol})   # time: 0.01627541
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt8}})   # time: 0.016240854
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int32}})   # time: 0.016009107
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Float16}})   # time: 0.01593761
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt32}})   # time: 0.01564258
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Float64}})   # time: 0.015576529
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Float32}})   # time: 0.015475711
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{UInt16}})   # time: 0.01542506
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt16})   # time: 0.015398525
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Bool}})   # time: 0.015394355
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{String}})   # time: 0.015094629
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Vector{Char}})   # time: 0.015054305
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Matrix{Int64}})   # time: 0.014923204
    Base.precompile(Tuple{typeof(_print_table_data!),Display,ProcessedTable,Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Int64,Vector{Int64},NTuple{4, Char},Symbol,Int64,Ref{Any},Vector{Int64},TextFormat,TextCrayons{Crayon, Vector{Crayon}},Symbol})   # time: 0.014284911
    Base.precompile(Tuple{typeof(_print_table_data!),Display,ProcessedTable,Matrix{Vector{String}},Vector{Int64},Int64,Vector{Int64},Int64,Vector{Int64},NTuple{4, Char},Symbol,Int64,Ref{Any},Vector{Int64},TextFormat,TextCrayons{Vector{Crayon}, Vector{Crayon}},Symbol})   # time: 0.01363732
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int16})   # time: 0.013626825
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt8})   # time: 0.013516624
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Int8})   # time: 0.013505153
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Symbol})   # time: 0.013157425
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Float64})   # time: 0.012817147
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Float32})   # time: 0.012714961
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Float16})   # time: 0.012167451
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt32})   # time: 0.011188599
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Bool})   # time: 0.011076043
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),UInt64})   # time: 0.010959459
    Base.precompile(Tuple{typeof(compact_type_str),DataType})   # time: 0.010779921
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Char})   # time: 0.01070436
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,AnsiTextCell,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.009061769
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,URLTextCell,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.008400785
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,String,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.006540811
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Bool},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.006315398
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Int8,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.006291926
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,UInt16,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.006170306
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Char,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.006134108
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Float32,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.006037812
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,UInt32,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005900637
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{UInt64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005851295
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Float64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005753602
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{String},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005734737
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Int16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005720342
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,UInt64,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005701658
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Float16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005635798
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Tuple{Int64, Int64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005580636
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Int64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005474095
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Float64,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005457657
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{UInt32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005315273
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),String})   # time: 0.005302249
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Float16,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005242868
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Bool,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005121168
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Float16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005117688
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Bool},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005055957
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Int32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.005037659
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Int64,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.00499747
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{UInt8},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004899224
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),Symbol})   # time: 0.004851471
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Float64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004812314
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Symbol,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004756338
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Char},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004720223
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{UInt8},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004699732
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Int64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004556531
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{UInt64},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004469562
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Char},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.00412124
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Int16,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004119575
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Int8},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004094839
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Int32,String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004083395
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{UInt32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004082215
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Int8},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004056602
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{UInt16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004053927
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{UInt16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.004052181
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Float32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003992691
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Matrix{Float32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003974456
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Int16},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003938468
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{Int32},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.003908527
    Base.precompile(Tuple{typeof(_process_data_cell_text),ProcessedTable,Vector{String},String,Int64,Int64,Int64,Int64,Crayon,Symbol,Ref{Any}})   # time: 0.00388573
    Base.precompile(Tuple{Core.kwftype(typeof(_parse_cell_text)),NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Val{:print}}},typeof(_parse_cell_text),URLTextCell})   # time: 0.003047798
    Base.precompile(Tuple{typeof(_print_custom_text_cell!),Display,AnsiTextCell,String,Crayon,Int64,Ref{Any}})   # time: 0.00151253
    Base.precompile(Tuple{typeof(_print_custom_text_cell!),Display,URLTextCell,String,Crayon,Int64,Ref{Any}})   # time: 0.001500213
    Base.precompile(Tuple{typeof(isassigned),ColumnTable,Int64,Int64})   # time: 0.001072291
end
